'''
Два игрока, Петя и Ваня, играют в следующую игру. Перед игроками лежит куча камней.
Игроки ходят по очереди, первый ход делает Петя. За один ход игрок может: убрать из
кучи от 1 до 5(включительно) камней или уменьшить количество камней в куче в пять раз
(количество камней, полученное при делении, округляется до меньшего) .
Например, из кучи в 20 камней за один ход можно получить кучу из 19, 18, 17, 16, 15 или
4 камней. Игра завершается, когда количество камней в куче становится не более 12.
Победителем считается игрок, сделавший последний ход, то есть первым получивший кучу, в
которой будет 12 или меньше камней. В начальный момент в куче было S камней, S ≥ 20.
Будем говорить, что игрок имеет выигрышную стратегию, если он может выиграть при любых
ходах противника.
Укажите минимальное значение S, при котором Петя не может выиграть за один ход, но при
любом ходе Пети Ваня может выиграть своим первым ходом.
Задание 20.
Для игры, описанной в задании 19, найдите минимальное и максимальное значение S, при которых у Пети есть выигрышная стратегия, причём одновременно выполняются два условия:
– Петя не может выиграть за один ход;
– Петя может выиграть своим вторым ходом независимо от того, как будет ходить Ваня.
Найденные значения запишите в ответе в порядке возрастания.
Задание 21.
Для игры, описанной в задании 19, найдите минимальное значение S, при котором одновременно выполняются два условия:
– у Вани есть выигрышная стратегия, позволяющая ему выиграть первым или вторым ходом при любой игре Пети;
– у Вани нет стратегии, которая позволит ему гарантированно выиграть первым ходом.
'''


def f(n, p):
    if n <= 12: return p % 2 == 0
    if p == 0:
        return 0
    h = [f(n - 1, p - 1), f(n - 2, p - 1), f(n - 3, p - 1),f(n - 4, p - 1), f(n - 5, p - 1), f(n // 5, p - 1)]
    return any(h) if p%2 == 1 else all(h)
print([i for i in range(1000, 19, -1) if f(i, 2)])
print([i for i in range(1000, 19, -1) if f(i, 3) and not f(i, 1)])
print([i for i in range(1000, 19,-1) if f(i, 4) and not f(i, 2)])