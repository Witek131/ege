"""На складе хранятся кубические контейнеры двух цветов различного размера.
Чтобы сократить занимаемое при хранении место, контейнеры вкладывают
друг в друга. Чтобы вложенные контейнеры было лучше видно, их цвета при
вложении обязательно должны чередоваться, то есть нельзя вкладывать
контейнер в контейнер такого же цвета. Один контейнер можно вложить
в другой, если размер стороны внешнего контейнера превышает размер
стороны внутреннего на 7 и более условных единиц. Группу вложенных друг
в друга контейнеров называют блоком. Количество контейнеров в блоке
может быть любым. Каждый блок, независимо от количества и размера
входящих в него контейнеров, а также каждый одиночный контейнер, не
входящий в блоки, занимает при хранении одну складскую ячейку.
Зная размеры и цвета всех контейнеров, определите максимально возможное
количество контейнеров в одном блоке и минимальное количество ячеек для
хранения всех контейнеров.
Входные данные
Каждая строка входного файла содержит натуральное число и букву A или B.
Число обозначает размер контейнера в условных единицах, буква – цвет
этого контейнера (буквами A и B условно обозначены два цвета).
В ответе запишите два целых числа: сначала максимально возможное
количество контейнеров в одном блоке, затем минимальное количество ячеек
для хранения всех контейнеров. """
f = open('file/26.txt').read().split('\n')[1:]
s = {'A': [], 'B': []}
for i in f:
    a = i.split()
    if a:
        s[a[1]].append(int(a[0]))
s['A'].sort()
s['B'].sort()
print(s['B'])
print(s['A'])
s1 = 0
a = []
b = []
k = 0

for i in range(len(s['A'])):
    if s1 % 2 == 0:
        for j in range(k, len(s['B'])):
            if s['A'][k] + 7 <= s['B'][j]:
                s1 += 1
                a.append(s['B'][j])
                break
        k1 = j

    else:
        for j in range(k2, len(s['A'])):
            if s['B'][k] + 7 <= s['A'][j]:
                s1 += 1
                b.append(s['A'][j])
                break
        k2 = j

